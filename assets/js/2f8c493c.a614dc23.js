"use strict";(self.webpackChunklamby=self.webpackChunklamby||[]).push([[118],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var i=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=i.createContext({}),m=function(e){var t=i.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=m(e.components);return i.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(a),d=n,k=c["".concat(u,".").concat(d)]||c[d]||p[d]||r;return a?i.createElement(k,o(o({ref:t},s),{},{components:a})):i.createElement(k,o({ref:t},s))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var m=2;m<r;m++)o[m]=a[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},304:(e,t,a)=>{a.d(t,{Z:()=>r});var i=a(7294);const n={anatomy:"How Lamby Works",cpu:"CPU Architecture",environment:"ENV Variables & Secrets",assets:"JavaScript & Assets",deploy:"Build & Deploy","custom-domain":"Custom Domain Names",activejob:"ActiveJob & Background Processing",observability:"Logging & Observability",database:"Database & VPCs",webservers:"Web Proxy Integrations"};function r(e){let{id:t,name:a,anchor:r}=e;const o=a||n[t]||t.replace(/(_|-)/g," ").split(" ").map((e=>e.charAt(0).toUpperCase()+e.toLowerCase().slice(1))).join(" ");return r?i.createElement("a",{href:`/docs/${t}#${r}`},o):i.createElement("a",{href:`/docs/${t}`},o)}},4217:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var i=a(7462),n=(a(7294),a(3905)),r=a(304);const o={id:"custom-domain",title:"Custom Domain Names",toc_max_heading_level:3},l="Custom Domain Names",u={unversionedId:"custom-domain",id:"custom-domain",title:"Custom Domain Names",description:"Function URLs",source:"@site/docs/custom-domain.mdx",sourceDirName:".",slug:"/custom-domain",permalink:"/docs/custom-domain",draft:!1,editUrl:"https://github.com/customink/lamby-site/tree/master/docs/custom-domain.mdx",tags:[],version:"current",frontMatter:{id:"custom-domain",title:"Custom Domain Names",toc_max_heading_level:3},sidebar:"docsSidebar",previous:{title:"Running Tasks",permalink:"/docs/running-tasks"},next:{title:"Web Proxy Integrations",permalink:"/docs/webservers"}},m={},s=[{value:"Function URLs",id:"function-urls",level:2},{value:"API Gateway",id:"api-gateway",level:2},{value:"Individual Steps",id:"individual-steps",level:2},{value:"Secure Certificate with ACM",id:"secure-certificate-with-acm",level:3},{value:"Simple CloudFront Distribution",id:"simple-cloudfront-distribution",level:3},{value:"Create a Route53 Record",id:"create-a-route53-record",level:3},{value:"API Gateway Custom Domain Names",id:"api-gateway-custom-domain-names",level:3}],c={toc:s};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"custom-domain-names"},"Custom Domain Names"),(0,n.kt)("h2",{id:"function-urls"},"Function URLs"),(0,n.kt)("p",null,"If you are following our latest ",(0,n.kt)(r.Z,{id:"quick-start",name:"cookiecutter",mdxType:"DocLink"})," pattern, then you are using Lambda's free Function URLs (FURL) which allows ",(0,n.kt)(r.Z,{id:"assets",mdxType:"DocLink"})," to work out of the box. Using a custom domain name with a FURL is as easy as adding CloudFront. To see your FURL in the AWS Console, open the Lambda section -> Click Your Function Name -> Open Versions Tab -> Open Configuration Tab -> Click alias: live. Your Function URL will appear in the upper right. Ex: ",(0,n.kt)("inlineCode",{parentName:"p"},"uniquestring.lambda-url.us-east-1.on.aws"),". Custom Domain Name Steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#secure-certificate-with-acm"},"Secure Certificate with ACM")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#simple-cloudFront-distribution"},"Simple CloudFront Distribution")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-route53-record"},"Create a Route53 Record"))),(0,n.kt)("h2",{id:"api-gateway"},"API Gateway"),(0,n.kt)("p",null,"For API Gateway Lamby users, their Custom Domain Name featue is the only way to get ",(0,n.kt)(r.Z,{id:"assets",mdxType:"DocLink"})," working correctly by removing the stage path. You can optionally add a CloudFront distribution above this for edge caching. Custom Domain Name Steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#secure-certificate-with-acm"},"Secure Certificate with ACM")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#api-gateway-custom-domain-names"},"API Gateway Custom Domain Names")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#simple-cloudFront-distribution"},"Simple CloudFront Distribution")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-route53-record"},"Create a Route53 Record"))),(0,n.kt)("h2",{id:"individual-steps"},"Individual Steps"),(0,n.kt)("h3",{id:"secure-certificate-with-acm"},"Secure Certificate with ACM"),(0,n.kt)("p",null,"We are going to use ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html"},"AWS Certificate Manager")," to secure your HTTPS traffic under your custom domain. Again, this assumes your domain is setup in Route53 since you will need to validate the certificate and AWS makes that super easy with DNS."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AWS Console -> Certificate Manager"),(0,n.kt)("li",{parentName:"ul"},'Click "Request a certificate" button.'),(0,n.kt)("li",{parentName:"ul"},'Select "Request a public certificate", and "Request a certificate" button.'),(0,n.kt)("li",{parentName:"ul"},"Domain name. Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"*.example.com")),(0,n.kt)("li",{parentName:"ul"},'Click "Next"'),(0,n.kt)("li",{parentName:"ul"},'Select "DNS validation", and "Review".'),(0,n.kt)("li",{parentName:"ul"},'Click "Confirm and request" button.'),(0,n.kt)("li",{parentName:"ul"},"Click the tiny disclosure triangle beside your domain name."),(0,n.kt)("li",{parentName:"ul"},'Click the "Create record in Route 53" button then "Create" again in modal.'),(0,n.kt)("li",{parentName:"ul"},'Click "Continue"')),(0,n.kt)("p",null,'Verification will take about 3 minutes. From the Certificate Manager dashboard, you can wait and/or hit the \ud83d\udd04 button and the Status will change from "Pending validation" to "Issued".'),(0,n.kt)("h3",{id:"simple-cloudfront-distribution"},"Simple CloudFront Distribution"),(0,n.kt)("p",null,"Basic reference steps for creating a CloudFront distribution. If you are editing an existing CloudFront distribution, some of these settings might be in your default behavior vs the distribution."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Origin:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Origin Domain: Function URL or API Gateway Custom Domain Name Endpoint Config"),(0,n.kt)("li",{parentName:"ul"},"Protocol: HTTPS only"),(0,n.kt)("li",{parentName:"ul"},"Minimum Origin SSL Protocol: TLSv1.2"),(0,n.kt)("li",{parentName:"ul"},"Origin Path: /production (\u26a0\ufe0f Ignore for FURLs. API Gateway stage name.)"),(0,n.kt)("li",{parentName:"ul"},"Add Custom Header: X-Forwarded-Host myapp.example.com"))),(0,n.kt)("li",{parentName:"ul"},"Default Cache Behavior:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Compress Objects Automatically: Yes"),(0,n.kt)("li",{parentName:"ul"},"Viewer Protocol Policy: Redirect HTTP to HTTPS"),(0,n.kt)("li",{parentName:"ul"},"Allowed HTTP Methods: GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Cached HTTP Methods: \u2714\ufe0f OPTIONS"))),(0,n.kt)("li",{parentName:"ul"},"Legacy cache settings:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Headers: Include the following headers",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Accept"))),(0,n.kt)("li",{parentName:"ul"},"Query Strings: All"),(0,n.kt)("li",{parentName:"ul"},"Cookies: All"))))),(0,n.kt)("li",{parentName:"ul"},"Settings:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Price Class: Use only North America and Europe"),(0,n.kt)("li",{parentName:"ul"},"Alternate domain name (CNAME): myapp.example.com"),(0,n.kt)("li",{parentName:"ul"},"Custom SSL Certificate (select ","*",".example.com from ACM steps)")))),(0,n.kt)("p",null,"This process takes a while to fully deploy. Once done you will have a CloudFront domain name looking something like ",(0,n.kt)("inlineCode",{parentName:"p"},"dxxxxxxxxxxxxx.cloudfront.net"),". You can now ",(0,n.kt)("a",{href:"#create-a-route53-record"},"Create a Route53 Record")," alias for ",(0,n.kt)("inlineCode",{parentName:"p"},"myapp.example.com")," to this CloudFront distribution domain name."),(0,n.kt)("p",null,"Feel free to create an additional behavior for the ",(0,n.kt)("inlineCode",{parentName:"p"},"/assets")," path using the ",(0,n.kt)("inlineCode",{parentName:"p"},"CachingOptimized")," cache policy and ",(0,n.kt)("inlineCode",{parentName:"p"},"None")," for the Origin request policy. This will ensure the asset pipeline files are edge-cached and compressed."),(0,n.kt)("h3",{id:"create-a-route53-record"},"Create a Route53 Record"),(0,n.kt)("p",null,"From here all we need is a DNS entry in Route53 that points to our origin. Typically this would be to your CloudFront distribution. However, it could be to"),(0,n.kt)("p",null,'"API Gateway domain name" we created in the step above. That domain name looks something like: ',(0,n.kt)("inlineCode",{parentName:"p"},"d-byp3km86t3.execute-api.us-east-1.amazonaws.com")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AWS Console -> Route 53 -> Hosted zones"),(0,n.kt)("li",{parentName:"ul"},"Click on your domain"),(0,n.kt)("li",{parentName:"ul"},'Click "Create record"'),(0,n.kt)("li",{parentName:"ul"},'Click "Switch to wizard" if not selected already.'),(0,n.kt)("li",{parentName:"ul"},'Select "Simple routing"'),(0,n.kt)("li",{parentName:"ul"},'Click "Next"'),(0,n.kt)("li",{parentName:"ul"},'Click "Define simple record"'),(0,n.kt)("li",{parentName:"ul"},"Record name. Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"myapp")),(0,n.kt)("li",{parentName:"ul"},"Record type: ",(0,n.kt)("inlineCode",{parentName:"li"},"A - Routes traffic to an IPv4 address and some AWS resources")),(0,n.kt)("li",{parentName:"ul"},"Value/Route traffic to: (either or)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Alias to CloudFront distribution",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Endpoint: ",(0,n.kt)("inlineCode",{parentName:"li"},"dxxxxxxxxxxxxx.cloudfront.net")))),(0,n.kt)("li",{parentName:"ul"},"Alias to API Gateway API",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Choose Region: Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"us-east-1")),(0,n.kt)("li",{parentName:"ul"},"Choose endpoint: Should autofill, Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"d-xxxxxxxxxx.execute-api.us-east-1.amazonaws.com")))))),(0,n.kt)("li",{parentName:"ul"},"Evaluate target health: ",(0,n.kt)("inlineCode",{parentName:"li"},"No")),(0,n.kt)("li",{parentName:"ul"},'Click "Define simple record"'),(0,n.kt)("li",{parentName:"ul"},'Click "Create records"')),(0,n.kt)("h3",{id:"api-gateway-custom-domain-names"},"API Gateway Custom Domain Names"),(0,n.kt)("p",null,"Any ",(0,n.kt)(r.Z,{id:"webservers",mdxType:"DocLink"})," with API Gateway will need to leverage its Custom Domain Name feature. The only exception would be if you are using an Application Load Balancer without REST API."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AWS Console -> API Gateway"),(0,n.kt)("li",{parentName:"ul"},'Click "Custom domain names" in the left panel.'),(0,n.kt)("li",{parentName:"ul"},'Click "Create" button'),(0,n.kt)("li",{parentName:"ul"},"Enter domain name. Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"myapp.example.com")),(0,n.kt)("li",{parentName:"ul"},"Use default ",(0,n.kt)("inlineCode",{parentName:"li"},"TLS 1.2 (recommended)"),"."),(0,n.kt)("li",{parentName:"ul"},"Endpoint type ",(0,n.kt)("inlineCode",{parentName:"li"},"Regional"),"."),(0,n.kt)("li",{parentName:"ul"},"ACM certificate. Select wildcard matching domain from above."),(0,n.kt)("li",{parentName:"ul"},'Click "Create domain name"')),(0,n.kt)("p",null,"After this has been created, the mappings tab should be selected. From here we need to create an API Mapping to point to your specific API Gateway and stage/path. Assuming it is selected:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Click the "API mappings" tab.'),(0,n.kt)("li",{parentName:"ul"},'You should see "No API mappings have been configured..." message'),(0,n.kt)("li",{parentName:"ul"},'Click "Configure API mappings" button.'),(0,n.kt)("li",{parentName:"ul"},'Click "Add new mapping" button.'),(0,n.kt)("li",{parentName:"ul"},"Select your API: Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"myapp (HTTP - 511n0spvi9)"),"."),(0,n.kt)("li",{parentName:"ul"},"Select your Stage: Ex: ",(0,n.kt)("inlineCode",{parentName:"li"},"production"),".",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If you see ",(0,n.kt)("inlineCode",{parentName:"li"},"Stage")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"production")," ignore Stage. Known REST bug."))),(0,n.kt)("li",{parentName:"ul"},"Leave ",(0,n.kt)("inlineCode",{parentName:"li"},"Path")," empty."),(0,n.kt)("li",{parentName:"ul"},'Click the "Save" button.')))}p.isMDXComponent=!0}}]);