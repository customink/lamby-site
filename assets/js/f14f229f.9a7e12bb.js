"use strict";(self.webpackChunklamby=self.webpackChunklamby||[]).push([[5660],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),b=o,f=u["".concat(s,".").concat(b)]||u[b]||m[b]||r;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},8005:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),o=(a(7294),a(3905)),r=a(4998);a(941),a(4996);const i={slug:"the-elusive-lambda-console-a-specification-proposal",title:"The Elusive Lambda Console; A Specification Proposal.",authors:["kcollins"],tags:["rails","lambda","console","specification","runner","tasks","interaction"]},l=void 0,s={permalink:"/blog/the-elusive-lambda-console-a-specification-proposal",source:"@site/blog/2023-06-17-the-elusive-lambda-console-a-specification-proposal.mdx",title:"The Elusive Lambda Console; A Specification Proposal.",description:'After years of smashing Cloud & Rails together, I\'ve come up with an idea. Better than an idea, a working specification! One where us Rails & Lambda enthusiasts can once again "console into" our "servers" and execute CLI tasks like migrations or interact via our beloved IRB friend, the Rails console. Today, I would like to present, the Lambda Console project. An open specification proposal for any AWS Lambda runtime to adopt.',date:"2023-06-17T00:00:00.000Z",formattedDate:"June 17, 2023",tags:[{label:"rails",permalink:"/blog/tags/rails"},{label:"lambda",permalink:"/blog/tags/lambda"},{label:"console",permalink:"/blog/tags/console"},{label:"specification",permalink:"/blog/tags/specification"},{label:"runner",permalink:"/blog/tags/runner"},{label:"tasks",permalink:"/blog/tags/tasks"},{label:"interaction",permalink:"/blog/tags/interaction"}],readingTime:3.01,hasTruncateMarker:!0,authors:[{name:"Ken Collins",title:"Principal Engineer & Cloud Architect",url:"https://dev.to/metaskills",imageURL:"https://github.com/metaskills.png",key:"kcollins"}],frontMatter:{slug:"the-elusive-lambda-console-a-specification-proposal",title:"The Elusive Lambda Console; A Specification Proposal.",authors:["kcollins"],tags:["rails","lambda","console","specification","runner","tasks","interaction"]},nextItem:{title:"Using Tailscale on Lambda for a Live Development Proxy",permalink:"/blog/tailscale-extension-for-lambda-containers"}},c={authorsImageUrls:[void 0]},p=[],u={toc:p};function m(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("a",{href:"https://github.com/rails-lambda/lambda-console"},(0,o.kt)("img",{src:r.Z})),(0,o.kt)("p",null,"After years of smashing Cloud & Rails together, I've come up with an idea. Better than an idea, a working specification! One where us ",(0,o.kt)("a",{parentName:"p",href:"https://lamby.cloud"},"Rails & Lambda"),' enthusiasts can once again "console into" our "servers" and execute CLI tasks like migrations or interact via our beloved IRB friend, the Rails console. Today, I would like to present, the ',(0,o.kt)("a",{parentName:"p",href:"https://github.com/rails-lambda/lambda-console"},"Lambda Console")," project. An open specification proposal for any AWS Lambda runtime to adopt."))}m.isMDXComponent=!0},4998:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/header-0b81fd83e6fbc1b5952e0cb0b0ba81fe.png"}}]);